{"ast":null,"code":"export default {\n  type: \"Choice\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      name: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        type: [{\n          required: true,\n          message: '请输入课程名称',\n          trigger: 'blur'\n        }]\n      },\n      ids: [],\n      teacherData: []\n    };\n  },\n  created() {\n    this.load(1);\n    this.loadteacher();\n  },\n  methods: {\n    loadteacher() {\n      this.$request.get('/teacher/selectAll').then(res => {\n        if (res.code === '200') {\n          this.teacherData = res.data;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/choice/update' : '/choice/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/choice/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/choice/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/choice/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.name = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    handleAvatarSuccess(response, file, fileList) {\n      // 把头像属性换成上传的图片的链接\n      this.form.avatar = response.data;\n    }\n  }\n};","map":{"version":3,"names":["type","data","tableData","pageNum","pageSize","total","name","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","required","message","trigger","ids","teacherData","created","load","loadteacher","methods","$request","get","then","res","code","$message","error","msg","handleAdd","handleEdit","row","stringify","save","$refs","formRef","validate","valid","url","id","method","success","del","$confirm","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","params","list","reset","handleCurrentChange","handleAvatarSuccess","file","fileList","avatar"],"sources":["src/views/manager/Choice.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"table\">\r\n            <el-table :data=\"tableData\" strip @selection-change=\"handleSelectionChange\">\r\n                <el-table-column type=\"selection\" width=\"55\" align=\"center\" v-if=\"user.role ==='ADMIN'\"></el-table-column>\r\n                <el-table-column prop=\"id\" label=\"序号\" width=\"70\" align=\"center\" sortable></el-table-column>\r\n                <el-table-column prop=\"name\" label=\"课程名称\" show-overflow-tooltip></el-table-column>\r\n                <el-table-column prop=\"type\" label=\"课程类型\" show-overflow-tooltip></el-table-column>\r\n                <el-table-column prop=\"teacherName\" label=\"授课教师\" show-overflow-tooltip></el-table-column>\r\n                <el-table-column prop=\"score\" label=\"学分\" show-overflow-tooltip></el-table-column>\r\n                <el-table-column prop=\"num\" label=\"上课人数\" show-overflow-tooltip></el-table-column>\r\n                <el-table-column prop=\"room\" label=\"上课教室\" show-overflow-tooltip></el-table-column>\r\n                <el-table-column prop=\"week\" label=\"周几\" show-overflow-tooltip></el-table-column>\r\n                <el-table-column prop=\"segment\" label=\"第几大节\" show-overflow-tooltip></el-table-column>\r\n                <el-table-column prop=\"status\" label=\"上课状态\" show-overflow-tooltip></el-table-column>\r\n\r\n                <el-table-column label=\"操作\" align=\"center\" width=\"180\">\r\n                    <template v-slot=\"scope\">\r\n                        <el-button size=\"mini\" type=\"primary\" plain @click=\"handleEdit(scope.row)\" size=\"mini\" v-if=\"user.role !=='STUDENT'\">编辑</el-button>\r\n                        <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\" v-if=\"user.role ==='ADMIN'\">删除</el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n\r\n            <div class=\"pagination\">\r\n                <el-pagination\r\n                        background\r\n                        @current-change=\"handleCurrentChange\"\r\n                        :current-page=\"pageNum\"\r\n                        :page-sizes=\"[5, 10, 20]\"\r\n                        :page-size=\"pageSize\"\r\n                        layout=\"total, prev, pager, next\"\r\n                        :total=\"total\">\r\n                </el-pagination>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        type: \"Choice\",\r\n        data() {\r\n            return {\r\n                tableData: [],  // 所有的数据\r\n                pageNum: 1,   // 当前的页码\r\n                pageSize: 10,  // 每页显示的个数\r\n                total: 0,\r\n                name: null,\r\n                fromVisible: false,\r\n                form: {},\r\n                user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n                rules: {\r\n                    type: [\r\n                        {required: true, message: '请输入课程名称', trigger: 'blur'},\r\n                    ]\r\n                },\r\n                ids: [],\r\n                teacherData: [],\r\n            }\r\n        },\r\n        created() {\r\n            this.load(1)\r\n            this.loadteacher()\r\n        },\r\n        methods: {\r\n            loadteacher(){\r\n                this.$request.get('/teacher/selectAll').then(res => {\r\n                    if(res.code === '200') {\r\n                        this.teacherData = res.data\r\n                    }else{\r\n                        this.$message.error(res.msg)\r\n                    }\r\n                })\r\n\r\n            },\r\n            handleAdd() {   // 新增数据\r\n                this.form = {}  // 新增数据的时候清空数据\r\n                this.fromVisible = true   // 打开弹窗\r\n            },\r\n            handleEdit(row) {   // 编辑数据\r\n                this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n                this.fromVisible = true   // 打开弹窗\r\n            },\r\n            save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n                this.$refs.formRef.validate((valid) => {\r\n                    if (valid) {\r\n                        this.$request({\r\n                            url: this.form.id ? '/choice/update' : '/choice/add',\r\n                            method: this.form.id ? 'PUT' : 'POST',\r\n                            data: this.form\r\n                        }).then(res => {\r\n                            if (res.code === '200') {  // 表示成功保存\r\n                                this.$message.success('保存成功')\r\n                                this.load(1)\r\n                                this.fromVisible = false\r\n                            } else {\r\n                                this.$message.error(res.msg)  // 弹出错误的信息\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            },\r\n            del(id) {   // 单个删除\r\n                this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n                    this.$request.delete('/choice/delete/' + id).then(res => {\r\n                        if (res.code === '200') {   // 表示操作成功\r\n                            this.$message.success('操作成功')\r\n                            this.load(1)\r\n                        } else {\r\n                            this.$message.error(res.msg)  // 弹出错误的信息\r\n                        }\r\n                    })\r\n                }).catch(() => {\r\n                })\r\n            },\r\n            handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n                this.ids = rows.map(v => v.id)\r\n            },\r\n            delBatch() {   // 批量删除\r\n                if (!this.ids.length) {\r\n                    this.$message.warning('请选择数据')\r\n                    return\r\n                }\r\n                this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n                    this.$request.delete('/choice/delete/batch', {data: this.ids}).then(res => {\r\n                        if (res.code === '200') {   // 表示操作成功\r\n                            this.$message.success('操作成功')\r\n                            this.load(1)\r\n                        } else {\r\n                            this.$message.error(res.msg)  // 弹出错误的信息\r\n                        }\r\n                    })\r\n                }).catch(() => {\r\n                })\r\n            },\r\n            load(pageNum) {  // 分页查询\r\n                if (pageNum) this.pageNum = pageNum\r\n                this.$request.get('/choice/selectPage', {\r\n                    params: {\r\n                        pageNum: this.pageNum,\r\n                        pageSize: this.pageSize,\r\n                        name: this.name,\r\n                    }\r\n                }).then(res => {\r\n                    this.tableData = res.data?.list\r\n                    this.total = res.data?.total\r\n                })\r\n            },\r\n            reset() {\r\n                this.name = null\r\n                this.load(1)\r\n            },\r\n            handleCurrentChange(pageNum) {\r\n                this.load(pageNum)\r\n            },\r\n            handleAvatarSuccess(response, file, fileList) {\r\n                // 把头像属性换成上传的图片的链接\r\n                this.form.avatar = response.data\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}